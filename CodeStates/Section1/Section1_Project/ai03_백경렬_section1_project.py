# -*- coding: utf-8 -*-
"""ai03_백경렬_Section1_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BwK6_PhdE_Bxl53p4-bD1mdoDblepAdA

1. 다음 분기에 어떤 게임을 출시 해야 할 것인가 ! ( 다음 분기에 어떤 게임을 설계 해야 하는가?)

2. 데이터 내용을 분석 하고 colab으로 작성 해서 해당 내용 설명을 영상으로 작성해야 함.

3. 배운 내용 위주로 설정 하는 것을 권장.

4. 발표를 듣는 사람이 비데이터 직군이라 가정. ( 배경 지식 없는 사람도 이해하기 쉽게 설명 해야 함 )

5. 수업시간에 배운 주제를 위주로 사용.

6. 반드시 들어가야 하는 내용 ! ( 질문에 대답 할 수 있어야 한다 ! )
 - 지역에 따라서 선호하는 게임의 장르가 다를까 ?
 - 연도별 게임의 트렌드가 있을까 ?
 - 출고량 높은 게임에 대한 분석 및 시각화 프로세스 포함 !
7. 준비물 !
 - PPT 사용 가능 (옵션), Colab 노트북 보면서 발표 해도 됨. 
 - 발표 스크립트 (옵션), 
 - 발표 영상
8. 슬라이드에 들어가야 할 내용
 - 여러분이 생각 하는 문제 (혹은 풀었으면 하는 문제) 제시
 - 그 문제에 대한 가설 및 사용한 데이터셋에 대한 설명
 - 작업 결과 및 결론
9. 발표 스크립트 
 - 슬라이드를 설명 하는 스크립트 작성 ( 있으면 없는거랑 차이 큼 , 자연스럽게 말을 하듯 스크립트 작성 하면 자연스러운 결과물 만들 수 있음 )
10. 발표 영상 ( 녹화 및 제출 )
 - 발표 영상을 슬라이드, 스크립트를 사용해서 Zoom 으로 5분 이내 영상을 녹화.
 - 영상 촬영 방법은 AI Docs를 참조 
 - 녹화 영상 파일 설문조사 폼을 통해서 제출
11. 단정한 복장 

# 수요일 6시 까지 제출. 미리 제출 하는게 좋을 것임. 영상 올리다 짤리면 안됨!
# 최소한 한시간 전에 폼 작성 하는 것이 바람직.
"""

import pandas as pd

df = pd.read_csv('vgames2.csv', index_col = 0)
df

df.value_counts('Genre')

df.value_counts('Platform')

df.value_counts('Name')

df.value_counts('Year')

df.value_counts('Publisher')

df.value_counts('NA_Sales')

df.value_counts('EU_Sales')

df.value_counts('JP_Sales')

df.value_counts('Other_Sales')

# 연도별 많이 출시된 장르
# 연도별 최다 판매 게임 ( 총 판매량으로 하나 만들어 놓는것도 좋을 듯. )

# 연도별 많이 출시된 장르
df.head()

df.melt('Genre', 'Year')

# Year, Genre, Publisher 에서 결측값이 확인 됨.
df.isnull().sum()

df.groupby('Year').get_group(2017)

df[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']].replace(['K', 'M'], [10**0.001, '']).head(30)

sales = ['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']
for i in sales:
  df[i]= (df[i].replace(r'[KM]+$', '', regex=True).astype(float) * \
                df[i].str.extract(r'[\d\.]+([KM]+)', expand=False)
                  .fillna(1)
                  .replace(['K','M'], [10**-3, 1]).astype(int))

df[sales].head(30)

df[sales].sum() # 북미쪽 시장이 크다 !

df['total_sales'] = df[sales].sum(axis = 1)
df

df[df['total_sales'] == df['total_sales'].max()]    # 위 스포츠 !! 엄청난 매출을 선보였음!

df.sort_values(by=['total_sales'], axis=0)

df.sort_values(by=['total_sales'], axis=0, ascending=False).head(100)

sales_top_100 = df.sort_values(by=['total_sales'], axis=0, ascending=False).head(100)
sales_top_100

pd.crosstab(sales_top_100['Publisher'], sales_top_100['Genre'], margins = sum, margins_name = 'total')

# 탑 100 안에 있는 게임 중 닌텐도에서 출시한 게임이 49개를 차지하고 있다.
# 슈팅게임이 탑 100 안에 있는 게임중에 제일 많지만, 우리는 매출액이 큰 Nintendo에 게임을 출시하도록 설계 해보자.

sales_top_100.groupby('Publisher').get_group('Nintendo')

df.groupby('Publisher').get_group('Nintendo')



total_top100 = df.groupby('Publisher').agg({'total_sales' : np.mean}).sort_values(by=['total_sales'], axis=0, ascending=False).head(100)
total_top100

# 닌텐도에 낸다고 전부 다 잘 팔리는 것은 아님. 닌텐도에 낸 게임들의 평균 매출액을 확인해 보니 팔콤, 레드오브보다 낮음.

df.groupby('Publisher').get_group('Palcom')

df.groupby('Publisher').get_group('Red Orb')

# 닌텐도에는 다양한 장르의 게임이 분포 하고 있음
df.groupby('Publisher').get_group('Nintendo').sort_values(by=['total_sales'], axis=0, ascending=False).head(20).reset_index()



# Publisher는 닌텐도 시장이 많이 큼.

# 제일 많이 출시 하는 Publisher 는 Eletronic Arts 임, 닌텐도는 일곱번째임.
df.groupby('Publisher').size().sort_values(axis=0, ascending=False).head(10)

# Electronic Arts 쪽으로 게임을 출시하려면 Sports, shooter 장르쪽으로 선택 해야함.
df.groupby('Publisher').get_group('Electronic Arts').sort_values(by=['Year'], axis=0, ascending=False).head(20)

# 레이싱, 엑션, 시뮬레이터(심즈) 쪽 매출이 큼.
df.groupby('Publisher').get_group('Electronic Arts').sort_values(by=['total_sales'], axis=0, ascending=False).head(20)

