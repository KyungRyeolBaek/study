import sys


input = sys.stdin.readline

N = int(input().strip())
A = list(map(int, input().strip().split()))
length = len(A)
B = [0 for _ in range(length)]
sort_num = sorted(set(A))
rank = 0
for num in sort_num:
    for idx in list(filter(lambda x: A[x] == num, range(length))):
        B[idx] = rank
        rank += 1
print(' '.join(map(str, B)))

'''
# 수열 정렬 성공스페셜 저지

| 시간 제한 | 메모리 제한 | 제출 | 정답 | 맞힌 사람 | 정답 비율 |
| --- | --- | --- | --- | --- | --- |
| 2 초 | 128 MB | 13870 | 7145 | 6182 | 54.660% |

## 문제

P[0], P[1], ...., P[N-1]은 0부터 N-1까지(포함)의 수를 한 번씩 포함하고 있는 수열이다. 수열 P를 길이가 N인 배열 A에 적용하면 길이가 N인 배열 B가 된다. 적용하는 방법은 B[P[i]] = A[i]이다.

배열 A가 주어졌을 때, 수열 P를 적용한 결과가 비내림차순이 되는 수열을 찾는 프로그램을 작성하시오. 비내림차순이란, 각각의 원소가 바로 앞에 있는 원소보다 크거나 같을 경우를 말한다. 만약 그러한 수열이 여러개라면 사전순으로 앞서는 것을 출력한다.

## 입력

첫째 줄에 배열 A의 크기 N이 주어진다. 둘째 줄에는 배열 A의 원소가 0번부터 차례대로 주어진다. N은 50보다 작거나 같은 자연수이고, 배열의 원소는 1,000보다 작거나 같은 자연수이다.

## 출력

첫째 줄에 비내림차순으로 만드는 수열 P를 출력한다.

## 예제 입력 1

```
3
2 3 1

```

## 예제 출력 1

```
1 2 0

```

## 예제 입력 2

```
4
2 1 3 1

```

## 예제 출력 2

```
2 0 3 1

```

## 예제 입력 3

```
8
4 1 6 1 3 6 1 4

```

## 예제 출력 3

```
4 0 6 1 3 7 2 5

```

## 출처

- 문제를 번역한 사람: [baekjoon](https://www.acmicpc.net/user/baekjoon)
- 잘못된 조건을 찾은 사람: [dareka](https://www.acmicpc.net/user/dareka)

## 알고리즘 분류

- [정렬](https://www.acmicpc.net/problem/tag/97)

## 메모

문제 이해가 쉽지 않은데 천천히 적어가면서 보면 된다.

예제로 예시를 들면서 하나씩 확인 해보면 간단하다.

우선 주어지는건 A, P

```python
A = [4, 1, 6, 1, 3, 6, 1, 4]
P = [4, 0, 6, 1, 3, 7, 2, 5]
B[P[i]] = A[i]
B = [1, 1, 1, 3, 4, 4, 6, 6]
```

B의 형태는 B[P[i]] = A[i]

P는 A의 리스트에 요소들의 0 ~ N-1 까지 오름차순으로 순번을 정해준다고 보면 된다.

A에서의 모든 요소를 set을 통해 구하고,

오름차순으로 정렬된 A의 요소들의 인덱스를 순서대로 순번을 정해주면 P가 나온다.
'''
