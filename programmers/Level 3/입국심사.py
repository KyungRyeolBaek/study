def solution(n, times):
    min_, max_ = 1, max(times)*n
    
    answer = min_
    while min_ <= max_:
        median = (min_ + max_) // 2
        passer = 0
        for t in times:
            passer += median // t
            if passer >= n:
                answer = median
                max_ = median - 1
                break
                
        if passer < n:
            min_ = median + 1

    return answer

### 메모
# 이진 탐색을 이용 : [https://www.notion.so/Python-10c82de4e8b94651a5112c004b202f71](https://www.notion.so/Python-10c82de4e8b94651a5112c004b202f71)
# 최소 시간과, 최대 시간이 만나는 지점이 우리가 구하려는 시간
# 따라서 중간 시간을 이용해 그 시간안에 심사 할 수 있는 사람이 만족 되면 반복문을 나오고 출력



# 입국심사
# 문제 설명
# n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.

# 처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.

# 모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.

# 입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 입국심사를 기다리는 사람은 1명 이상 1,000,000,000명 이하입니다.
# 각 심사관이 한 명을 심사하는데 걸리는 시간은 1분 이상 1,000,000,000분 이하입니다.
# 심사관은 1명 이상 100,000명 이하입니다.
# 입출력 예
# n	times	return
# 6	[7, 10]	28
# 입출력 예 설명
# 가장 첫 두 사람은 바로 심사를 받으러 갑니다.

# 7분이 되었을 때, 첫 번째 심사대가 비고 3번째 사람이 심사를 받습니다.

# 10분이 되었을 때, 두 번째 심사대가 비고 4번째 사람이 심사를 받습니다.

# 14분이 되었을 때, 첫 번째 심사대가 비고 5번째 사람이 심사를 받습니다.

# 20분이 되었을 때, 두 번째 심사대가 비지만 6번째 사람이 그곳에서 심사를 받지 않고 1분을 더 기다린 후에 첫 번째 심사대에서 심사를 받으면 28분에 모든 사람의 심사가 끝납니다.

# 출처

# ※ 공지 - 2019년 9월 4일 문제에 새로운 테스트 케이스를 추가하였습니다. 도움을 주신 weaver9651 님께 감사드립니다.